# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

# name for repository action page
name: RemakeDiabetesDiaryAPI & Maven CI

# master branch에 push 또는 PR 발생 시 동작하는 이벤트 트리거
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # 실행 환경
    runs-on: ubuntu-latest

    # task의 순서 명시
    steps:
      - uses: actions/checkout@v2

      # ec2 instance 내 java 환경은 1.8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'

        # 의존성 캐싱으로 빌드 시간을 더 빠르게 해보자
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Grant execute permission for mavenw
        run: chmod +x mvnw

      # 빌드하기
      - name: Build with Maven
        run: ./mvnw clean package -Dspring.config.location=classpath:/application.properties,/home/ec2-user/app/application-oauth.properties,/home/ec2-user/app/application-real-db.properties,/home/ec2-user/app/application-email.properties \ -Dspring.profiles.active=real

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make directory for delivery
        run: mkdir -p github-actions-deploy


      # jar file 복사하기
      - name: copy jar file
        run: cp target/*.jar ./github-actions-deploy

      # appspec.yml 파일 copy
      - name : copy appspec.yml file
        run : cp appspec.yml ./github-actions-deploy

      # script files 복사
      - name : copy shell scrips
        run : cp ./scripts/*.sh ./github-actions-deploy


      # 압축파일 형태 만들기
      - name : make zip file
        run : zip -r RemakeDiabetesDiaryAPI.zip ./github-actions-deploy

      # deploy
      - name: deploy
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region : ap-northeast-2

      # upload to s3
      - name : upload to s3
        run : aws s3 cp --region ap-northeast-2 --acl private ./RemakeDiabetesDiaryAPI.zip s3://dasd412-github-actions-deploy

      # deploy zip to code-deploy
      - name: CodeDeploy
        run: aws deploy create-deployment --application-name dasd412-diabetes-diary-api --deployment-group-name dasd412-diabetes-diary-api-group --s3-location bucket=dasd412-github-actions-deploy,key=RemakeDiabetesDiaryAPI.zip,bundleType=zip



